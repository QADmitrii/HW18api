plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    restAssuredVersion = '5.2.0',
    junitVersion = "5.9.0",
    slf4jVersion = '2.0.3'

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation(

            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            'com.github.javafaker:javafaker:1.0.2',
            'io.github.bonigarcia:webdrivermanager:5.3.0',
            'org.aeonbits.owner:owner:1.0.12',
            'org.assertj:assertj-core:3.23.1',
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.codeborne:selenide:6.9.0",
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}